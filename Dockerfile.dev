# ---- Stage 1: Build dependencies ----
FROM python:3.12-slim-bookworm AS builder

RUN groupadd --system appgroup && useradd --system --no-create-home --group appgroup appuser

WORKDIR /app

RUN apt-get update \
    && apt-get install -y --no-install-recommends build-essential python3-dev libffi-dev git curl \
    && rm -rf /var/lib/apt/lists/*

# Install uv (consider pinning version for more control)
RUN curl -fsSL https://astral.sh/uv/install.sh | sh && \
    mv $HOME/.local/bin/uv /usr/local/bin/uv

RUN uv --version

COPY pyproject.toml uv.lock ./

RUN uv pip install --system --requirements pyproject.toml debugpy --no-cache-dir
# RUN uv sync
# RUN uv pip install --system debugpy


# ---- Stage 2: Final image ----
FROM python:3.12-slim

WORKDIR /app

RUN apt-get update && apt-get install -y --no-install-recommends libffi-dev \
    && rm -rf /var/lib/apt/lists/*

RUN groupadd --system appgroup && useradd --system --no-create-home --group appgroup appuser

COPY --from=builder /usr/local/lib/python3.12/site-packages /usr/local/lib/python3.12/site-packages
COPY --from=builder /usr/local/bin /usr/local/bin

COPY --chown=appuser:appgroup . .

USER appuser

EXPOSE 8000

ENV PYTHONUNBUFFERED=1
ENV PYTHONWARNINGS="ignore"
ENV PYDEVD_DISABLE_FILE_VALIDATION=1

# Production: remove --reload!
CMD ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
