# --------------------------------------------
# Project Metadata
# --------------------------------------------
[project]
name = "versa-forge"
version = "0.1.0"
description = "Custom GPT platform with RAG support and optimized prompts"
readme = "README.md"
requires-python = ">=3.12"
authors = [{ name = "Zafar Hussain Luni", email = "your.email@example.com" }]
license = "MIT"
keywords = ["LLM", "RAG", "AI", "FastAPI", "ChatGPT", "Multi-Agent"]

# --------------------------------------------
# Core Dependencies (Runtime)
# --------------------------------------------
dependencies = [
    # Web framework and standard dependencies
    "fastapi[standard]>=0.115.8",
    # HTTP client
    "httpx>=0.28.1",
    # Environment settings
    "pydantic-settings>=2.7.1",
    # ORM (SQLAlchemy 2.x)
    "sqlalchemy>=2.0.38",
    # Typing support
    "typing-extensions>=4.11.0",
    # Password hashing
    "passlib[bcrypt]>=1.7.4",
    "pyjwt>=2.10.1",
    "psycopg[binary]>=3.2.9",

]

# --------------------------------------------
# Development Dependencies
# --------------------------------------------

[dependency-groups]
dev = [
    # Testing framework
    "pytest>=8.3.5",
    "pytest-asyncio>=0.26.0",
    # Static typing and linting
    "mypy>=1.15.0",
    "ruff>=0.4.3",
    # Formatter
    "black>=24.4.2",
    # Security analysis
    "bandit>=1.8.3",
    # Debugging
    "debugpy>=1.8.12",
    # Pre-commit hooks
    "pre-commit>=4.1.0",
    # Testcontainers for integration testing
    "testcontainers[postgres]>=4.10.0",
    # For Testconitainers bug
    "psycopg2-binary>=2.9.10",
]

# --------------------------------------------
# Mypy Configuration (Strict Type Checks)
# --------------------------------------------
[tool.mypy]
strict = true
disallow_untyped_defs = true
warn_unused_ignores = true
warn_return_any = true
warn_unused_configs = true

# --------------------------------------------
# Pytest Configuration
# --------------------------------------------
[tool.pytest.ini_options]
pythonpath = ["."]
testpaths = ["tests"]
addopts = "-v --disable-warnings"
markers = [
    "integration: marks tests as integration tests",
    "e2e: marks tests as end-to-end tests",
]

# --------------------------------------------
# Ruff (Faster Alternative/Complement to Pylint)
# --------------------------------------------
[tool.ruff]
line-length = 120
target-version = "py312"
select = ["E", "F", "I", "N", "B"]
ignore = ["E402"]

# --------------------------------------------
# Bandit Configuration
# --------------------------------------------
[tool.bandit]
exclude_dirs = ["tests", "migrations"]
skips = [
    "B101", # Ignore use of assert
    "B110", # Try/except/pass
]

# --------------------------------------------
# Pre-commit Hooks
# --------------------------------------------
[tool.pre-commit]
repos = [
    { repo = "https://github.com/psf/black", rev = "24.4.2", hooks = [
        { id = "black" },
    ] },
    { repo = "https://github.com/pre-commit/mirrors-mypy", rev = "v1.15.0", hooks = [
        { id = "mypy" },
    ] },
    { repo = "https://github.com/charliermarsh/ruff-pre-commit", rev = "v0.4.3", hooks = [
        { id = "ruff" },
    ] },
    { repo = "https://github.com/pre-commit/pre-commit-hooks", rev = "v4.6.0", hooks = [
        { id = "end-of-file-fixer" },
        { id = "trailing-whitespace" },
        { id = "check-added-large-files" },
    ] },
]
