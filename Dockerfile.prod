# ---- Stage 1: Build dependencies ----
FROM python:3.12-slim-bookworm AS builder

RUN groupadd --system appgroup && useradd --system --no-create-home --group appgroup appuser

WORKDIR /app

RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential python3-dev libffi-dev git curl \
    && rm -rf /var/lib/apt/lists/*

RUN curl -fsSL https://astral.sh/uv/install.sh | sh && \
    mv $HOME/.local/bin/uv /usr/local/bin/uv

COPY pyproject.toml uv.lock ./
RUN uv pip install --system --requirements pyproject.toml --no-cache-dir

# ---- Stage 2: Production-ready Image ----
FROM python:3.12-slim

WORKDIR /app

# Only install what is actually needed at runtime
RUN apt-get update && apt-get install -y --no-install-recommends libffi-dev \
    && rm -rf /var/lib/apt/lists/*

RUN groupadd --system appgroup && useradd --system --no-create-home --group appgroup appuser

COPY --from=builder /usr/local/lib/python3.12/site-packages /usr/local/lib/python3.12/site-packages
COPY --from=builder /usr/local/bin /usr/local/bin

COPY --chown=appuser:appgroup . .

USER appuser

EXPOSE 8000

ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1

HEALTHCHECK --interval=30s --timeout=5s --start-period=10s --retries=3 \
    CMD curl -f http://localhost:8000/ || exit 1

CMD ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]
